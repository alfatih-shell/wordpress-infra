# AWS playbook
---

- hosts: localhost
  connection: local
  gather_facts: False

  vars:
    key_name: my_aws
    region: us-east-2
    image: ami-0e8c23bb05ff67981 # https://cloud-images.ubuntu.com/locator/ec2/
    id: "web-app"
    sec_group: "{{ id }}-sec"
    db_name: "wordpress"
    user: "test"
    pass_wd: "{{db_pass}}"

  tasks:

    - name: Facts
      block:

      - name: Get instances facts
        ec2_instance_info:
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          region: "{{ region }}"
        register: result

      - name: Instances ID
        debug:
          msg: "ID: {{ item.instance_id }} - State: {{ item.state.name }} - Public DNS: {{ item.public_dns_name }}"
        loop: "{{ result.instances }}"

      tags: always


    - name: Provisioning EC2 instances
      block:

      - name: Upload public key to AWS
        ec2_key:
          name: "{{ key_name }}"
          key_material: "{{ lookup('file', '/home/zack/.ssh/{{ key_name }}.pub') }}"
          region: "{{ region }}"
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"

      - name: Create security group
        ec2_group:
          name: "{{ sec_group }}"
          description: "Sec group for app {{ id }}"
          # vpc_id: 12345
          region: "{{ region }}"
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          rules:
            - proto: tcp
              ports:
                - 22
              cidr_ip: 0.0.0.0/0
              rule_desc: allow all on ssh port
        register: result_sec_group

      - name: Provision instance(s)
        ec2_instance:
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          key_name: "{{ key_name }}"
          instance_ids: "{{ id }}"
          security_groups: "{{ result_sec_group.group_id }}"
          image_id: "{{ image }}"
          instance_type: t2.micro
          region: "{{ region }}"
          wait: true
          count: 1
          # exact_count: 2
          tags:
            Name: App
          #instance_tags:
          #  Name: App

      tags: ['never', 'create_ec2']

    - name: Provision Wordpress
      block: 

      - name: "launching a mysql database"
        rds_instance:
            aws_access_key: "{{ ec2_access_key }}"
            aws_secret_key: "{{ ec2_secret_key }}"
            command: create
            db_engine: "MySQL"
            db_name: "{{ db_name }}"
            engine_version: "5.7.31"
            instance_name: "db-wordpress"
            instance_type: "db.t2.micro"
            password: "{{ pass_wd }}"
            publicly_accessible: yes
            size: "20"
            region: "ap-south-1"
            username: "{{ user }}"
      - meta: refresh_inventory
      - pause:
            seconds: 30

      - name: "installing httpd"
        package:
            name: "httpd"
            state: present
      - name: "installing prerequisites for wordpress"
        yum:
          name:
              - php
              - tar
              - mysql
      - name: "downloading the wordpress tar file"
        ansible.builtin.unarchive:
            remote_src: yes
            src: "https://wordpress.org/latest.tar.gz"
            dest: "/var/www/html/"
      - shell: "amazon-linux-extras install php7.3 -y"
      - shell: "chown -R apache:apache /var/www/html/wordpress"
      - name: "starting the services of the httpd"
        service:
          name: "httpd"
          state: started
          enabled: yes  